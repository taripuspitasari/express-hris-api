// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  password   String
  name       String
  role       String
  token      String?
  is_active  Boolean   @default(true)
  Employee   Employee?
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt

  @@map("users")
}

model Attendance {
  id             Int       @id @default(autoincrement())
  employee_id    Int
  employee       Employee  @relation(fields: [employee_id], references: [id])
  check_in_time  DateTime
  check_out_time DateTime?
  date           DateTime

  @@map("attendances")
}

model Department {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String     @db.Text
  employees   Employee[]

  @@map("departments")
}

model Employee {
  id              Int          @id @default(autoincrement())
  user_id         Int          @unique
  user            User         @relation(fields: [user_id], references: [id])
  position        String
  department_id   Int
  department      Department   @relation(fields: [department_id], references: [id])
  join_date       DateTime
  status          String
  attendances     Attendance[]
  leavesRequested Leave[]      @relation("EmployeeLeaves")
  leavesApproved  Leave[]      @relation("ApprovedLeaves")

  @@map("employees")
}

model Leave {
  id          Int       @id @default(autoincrement())
  employee_id Int
  employee    Employee  @relation("EmployeeLeaves", fields: [employee_id], references: [id])
  type        String
  start_date  DateTime
  end_date    DateTime
  total_days  Int
  status      String    @default("pending")
  approvedBy  Int?
  approver    Employee? @relation("ApprovedLeaves", fields: [approvedBy], references: [id])
  approvedAt  DateTime?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  @@map("leaves")
}
